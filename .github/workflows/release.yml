on:
  workflow_call:
    secrets:
      token:
        description: secrets.GITHUB_TOKEN
        required: true

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact: 'ubuntu'
            command: './_AutoinstallCreator/release.sh'

          - os: windows-latest
            artifact: 'windows'
            command: './.tools/busybox.exe sh ./_AutoinstallCreator/release.sh'

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - run: ( ${{ matrix.command }} )
        id: create_artifact

      - uses: actions/upload-artifact@v3
        with:
          name: AutoinstallCreator-${{ matrix.artifact }}
          path: ${{ steps.create_artifact.outputs.artifact_path }}

      - uses: actions/upload-artifact@v3
        with:
          name: body
          path: ./body.md

  upload_release:
    needs: release
    runs-on: ubuntu-latest
    steps:
#      - name: Wait for build to succeed
#        id: wait-for-build
#        uses: fountainhead/action-wait-for-check@v1.0.0
#        with:
#          checkName: 'Run test-create (windows-latest, windows)'
#          ref: ${{ github.event.pull_request.head.sha || github.sha }}
#          token: ${{ secrets.token }}
#          timeoutSeconds: 1800

#      - name: setFailed when not wait-for-build
#        uses: actions/github-script@v6
#        if: steps.wait-for-build.outputs.conclusion != 'success'
#        with:
#          script: |
#            core.setFailed('conclusion is ${{ steps.wait-for-build.outputs.conclusion }}')

      - uses: actions/checkout@v3
      - run: git push origin :refs/tags/latest-${{ github.base_ref }}

      - uses: actions/download-artifact@v3
      - run: cp ./body/body.md ./body.md
      - run: ls -r ./body

      - uses: ncipollo/release-action@v1
        with:
          tag: latest-${{ github.base_ref }}
          artifacts: ./AutoinstallCreator-*/*
          bodyFile: './body.md'
          allowUpdates: true
          removeArtifacts: true
          token: ${{ secrets.token }}
